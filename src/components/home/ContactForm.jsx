import { useState } from "react";
import "./ContactForm.scss";
import { useTranslation } from "react-i18next";
import { motion, easeOut, easeIn } from "framer-motion";

function ContactForm() {
  const { t } = useTranslation();
  const [phoneNumber, setPhoneNumber] = useState("");
  const [name, setName] = useState("");
  const [error, setError] = useState(null);
  const [activeType, setActiveType] = useState("1-3");
  const [succesM, setSuccesM] = useState(false);
  const language = localStorage.getItem("i18nextLng");

  let bot = {
    TOKEN: "",
    chatID: "",
    message: `📩 Yangi xabar TATU saytida!
        %0A📚 Sinf yo'nalishi: ${
          activeType == "1-3"
            ? "1-3 kurslar"
            : activeType == "4"
            ? "Bitiruvchi kurs"
            : "Magistratura"
        } 
        %0A👤 Yuboruvchi: ${name}
        %0A📞 Telefon:${encodeURIComponent(phoneNumber)}
        %0A🌐 Til bo'yicha so'rov: ${
          language == "uz"
            ? "O'zbek tili"
            : language == "ru"
            ? "Rus tili"
            : "Ingliz tili"
        } 
    `,
  };

  const handleFocus = () => {
    if (!phoneNumber) {
      setPhoneNumber("+998");
    }
  };

  const handleChange = (e) => {
    const value = e.target.value;
    const isValid = /^[\d+]*$/.test(value);
    if (isValid) {
      setPhoneNumber(value);
    } else {
      setError(t("contactForm12"));
    }
  };

  const handleSucces = () => {
    setSuccesM(!succesM);
    setTimeout(() => {
      setSuccesM(false);
    }, 5000);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (name.length < 4) {
      setError(t("contactForm14"));
      return;
    }
    if (phoneNumber.length < 13) {
      setError(t("contactForm13"));
      return;
    }
    fetch(
      `https://api.telegram.org/bot${bot.TOKEN}/sendMessage?chat_id=${bot.chatID}&text=${bot.message} `,
      {
        method: "GET",
      }
    ).then(
      (success) => {
        if (success.status == 200) {
          handleSucces();
        }
      },
      (error) => {
        console.log(error);
      }
    );
    setPhoneNumber("");
    setActiveType("1-4");
    setName("");
    setError(null);
  };

  return (
    <section id="admission" className="contactForm">
      <div className="container">
        <div className="left">
          <motion.h1
            whileInView={{ y: [100, 1] }}
            transition={{ duration: 0.3, ease: easeOut }}
          >
            {t("contactForm1")} <span>{t("contactForm2")}</span>
          </motion.h1>
          <motion.p
            whileInView={{ y: [100, 1] }}
            transition={{ duration: 0.5, ease: easeOut }}
          >
            {t("contactForm3")}
          </motion.p>
          <svg
            width="107"
            height="120"
            viewBox="0 0 107 120"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M2.79444 0.783765L2.79441 0.783769C2.2552 0.850809 1.8411 0.911508 1.52548 0.978509C1.20539 1.04646 1.01084 1.11627 0.894898 1.18939C0.793499 1.25333 0.762055 1.31233 0.750618 1.38465C0.735637 1.47938 0.752726 1.61998 0.816804 1.84714C0.85138 1.9695 0.940159 2.08681 1.24085 2.19096C1.55253 2.29892 2.04166 2.37357 2.79586 2.42831L2.77777 2.67765L2.79588 2.42831C3.36904 2.46994 4.47769 2.682 5.97388 3.01938C7.47696 3.35831 9.38872 3.82789 11.579 4.39123C15.9598 5.518 21.46 7.02123 27.0437 8.6079C38.2025 11.7788 49.7219 15.2906 53.2932 16.7967C63.6545 21.1662 72.585 27.2423 79.1085 34.0179C85.6294 40.7908 89.7607 48.2798 90.4864 55.4754C91.0028 60.5991 89.794 64.9069 86.7942 68.5781C86.329 69.1473 85.8721 69.6703 85.5099 70.055C85.3292 70.2469 85.1693 70.4073 85.0423 70.5225C84.9792 70.5797 84.9201 70.6295 84.8681 70.6671C84.8422 70.6858 84.8141 70.7044 84.7851 70.7199C84.7605 70.7331 84.7155 70.7549 84.6601 70.7619L84.6597 70.7619C84.5817 70.7715 84.5165 70.7457 84.4907 70.735C84.4556 70.7204 84.4211 70.7011 84.3898 70.6818C84.3265 70.6427 84.2517 70.5879 84.1697 70.5231C84.0045 70.3925 83.7897 70.2047 83.5416 69.9757C83.0444 69.5168 82.4013 68.881 81.7313 68.1786C79.9623 66.3241 76.5152 63.5247 73.0053 60.9647C69.4929 58.4028 65.9507 56.1048 63.9944 55.2397C56.7355 52.0293 50.0821 50.8944 43.3945 51.7141L43.364 51.466L43.3944 51.7141C40.3989 52.081 38.2012 52.6028 36.4649 53.4214C34.7354 54.2368 33.452 55.3523 32.2945 56.928C31.5849 57.8939 31.1903 58.4961 30.9456 59.1012C30.7025 59.7024 30.6015 60.3213 30.5101 61.3333L30.2611 61.3108L30.5101 61.3333C30.3802 62.7702 30.5839 64.3331 31.0618 65.5918C32.9409 70.541 37.9226 74.8618 44.3792 77.7665C50.8291 80.6683 58.712 82.1381 66.3337 81.4157C71.7135 80.9057 78.0636 78.9967 81.7285 76.7978C82.267 76.4746 82.7712 76.1763 83.1499 75.956C83.3392 75.8459 83.4978 75.7548 83.614 75.6897C83.6719 75.6572 83.7205 75.6305 83.7575 75.6109C83.7639 75.6075 83.77 75.6043 83.776 75.6012C83.7874 75.5953 83.798 75.5899 83.8076 75.5853C83.8169 75.5808 83.8412 75.5689 83.8669 75.561L83.8669 75.561C83.9322 75.5411 83.9888 75.5509 84.0218 75.5603C84.0555 75.57 84.0824 75.5843 84.1001 75.595C84.1354 75.6163 84.1663 75.6431 84.1903 75.6657C84.2401 75.7126 84.297 75.7773 84.3577 75.8517C84.4806 76.0027 84.6411 76.2214 84.8284 76.4898C85.2041 77.0282 85.6991 77.783 86.2386 78.6359C87.3176 80.3415 88.5818 82.45 89.4374 84.0235C92.568 89.7811 94.6068 95.2911 96.2093 102.32C96.6362 104.192 97.0644 106.809 97.3398 108.96C97.4775 110.036 97.5777 111.001 97.6202 111.7C97.6414 112.049 97.6488 112.339 97.6379 112.548C97.6327 112.65 97.6224 112.746 97.602 112.823C97.5921 112.86 97.5756 112.91 97.5446 112.957C97.5137 113.004 97.445 113.08 97.328 113.09C97.2497 113.097 97.1912 113.067 97.1754 113.058C97.1511 113.045 97.1313 113.031 97.1181 113.02C97.0908 112.998 97.0634 112.972 97.0383 112.946C96.9866 112.892 96.9218 112.817 96.8474 112.726C96.6976 112.543 96.4956 112.281 96.2566 111.96C95.7781 111.316 95.1449 110.428 94.4722 109.45C93.1271 107.495 91.5739 105.447 91.0216 104.893L91.0215 104.893C90.7993 104.67 90.6263 104.504 90.4859 104.387C90.3421 104.267 90.2514 104.214 90.1939 104.195C90.1531 104.181 90.1426 104.187 90.1284 104.195C90.0956 104.214 90.0438 104.262 89.9606 104.376C89.8753 104.494 89.8258 104.631 89.8591 104.883C89.8945 105.151 90.0231 105.536 90.3014 106.127C90.8561 107.304 91.9621 109.212 93.9193 112.478C96.334 116.507 97.3722 117.916 98.4418 118.697C98.9006 119.033 99.2628 119.28 99.5613 119.447C99.8619 119.615 100.077 119.691 100.245 119.704C100.538 119.729 100.777 119.572 101.189 119.009C101.301 118.855 101.463 118.547 101.665 118.098C101.863 117.656 102.092 117.094 102.341 116.447C102.838 115.154 103.409 113.527 103.963 111.848C105.072 108.48 106.098 104.931 106.314 103.421L106.562 103.457L106.314 103.421C106.426 102.647 106.28 102.037 106.033 101.703C105.913 101.539 105.775 101.45 105.636 101.421C105.501 101.394 105.333 101.416 105.133 101.536C105.131 101.539 105.128 101.543 105.123 101.548C105.108 101.567 105.088 101.597 105.062 101.639C105.01 101.724 104.946 101.844 104.872 102C104.723 102.311 104.539 102.744 104.333 103.269C103.922 104.32 103.425 105.726 102.945 107.235L102.707 107.159L102.945 107.235C102.463 108.749 102 110.13 101.642 111.135C101.463 111.637 101.309 112.048 101.192 112.336C101.134 112.479 101.083 112.596 101.041 112.68C101.021 112.721 100.999 112.761 100.977 112.794C100.966 112.81 100.95 112.832 100.929 112.854L100.928 112.854C100.916 112.867 100.86 112.923 100.77 112.934L100.768 112.934C100.636 112.951 100.552 112.869 100.524 112.835C100.492 112.797 100.473 112.756 100.462 112.729C100.437 112.67 100.418 112.597 100.402 112.521C100.368 112.365 100.337 112.146 100.308 111.883C100.251 111.356 100.203 110.631 100.178 109.832C99.8436 99.455 95.4813 86.9962 88.6647 76.9842L86.6039 73.9576L86.5006 73.8059L86.6143 73.662L88.9994 70.6415C90.375 68.8991 91.2843 67.5356 91.9355 66.1154C92.5862 64.6964 92.9847 63.2089 93.3243 61.2126C94.4922 54.3482 91.9944 45.9299 86.4977 38.3652C79.5886 28.8564 67.3589 19.7633 53.9467 14.1813C49.4518 12.3105 37.5287 8.85158 26.273 5.91183C20.6489 4.44295 15.1985 3.10552 10.9357 2.16284C8.80398 1.69144 6.97162 1.31929 5.56404 1.07877C4.86007 0.958481 4.26503 0.871582 3.79331 0.821543C3.31528 0.770834 2.9831 0.760284 2.79444 0.783765ZM51.4343 53.8448L51.3908 54.091L51.4343 53.8448C55.3306 54.5335 59.7115 55.9211 63.525 57.6743C65.134 58.4142 67.8774 60.2401 70.6616 62.3244C73.4502 64.412 76.3043 66.7774 78.1364 68.6091C78.3983 68.8709 78.6444 69.1161 78.8752 69.346C79.6061 70.0741 80.1827 70.6486 80.6159 71.1099C80.9013 71.4138 81.1298 71.6742 81.3018 71.9018C81.4725 72.1274 81.5974 72.3334 81.6637 72.5283C81.7324 72.7303 81.7398 72.9266 81.6668 73.1162C81.5968 73.2978 81.4636 73.445 81.3071 73.5745C81.0751 73.7663 80.7318 73.9644 80.3217 74.2009C80.1972 74.2727 80.0665 74.3481 79.9309 74.4279C77.0447 76.1275 72.9213 77.4255 68.0211 78.1908C59.2214 79.565 51.4966 78.4327 44.0082 74.6647C39.8603 72.5773 36.7087 70.1131 34.8018 67.5703C32.8944 65.0267 32.2155 62.3769 33.0861 59.9559C33.2192 59.5856 33.3576 59.2343 33.4737 58.9656C33.5316 58.8317 33.5852 58.7155 33.6308 58.6268C33.6534 58.5827 33.6758 58.542 33.6971 58.508C33.7128 58.483 33.7454 58.4322 33.792 58.3948L33.7927 58.3942C33.7925 58.3944 33.7931 58.3939 33.7946 58.3927C33.7962 58.3912 33.7991 58.3888 33.8034 58.3849C33.8107 58.3784 33.8203 58.3697 33.8322 58.3587C33.8561 58.3366 33.8874 58.307 33.9255 58.2705C34.0017 58.1976 34.103 58.0992 34.2224 57.982C34.461 57.7479 34.7703 57.4407 35.0924 57.1173C36.6029 55.6012 39.1219 54.5094 42.027 53.9323C44.9386 53.3539 48.2698 53.2858 51.4343 53.8448Z"
              fill="#FF497A"
              stroke="white"
            ></path>
          </svg>
          <motion.h2
            whileInView={{ y: [50, 1] }}
            transition={{ duration: 0.7, ease: easeOut }}
          >
            +998-71-203-44-44
          </motion.h2>
        </div>
        <div className="right">
          <form onSubmit={handleSubmit}>
            <label>
              <motion.input
                whileInView={{ y: [100, 1] }}
                transition={{ duration: 0.5, ease: easeOut }}
                value={name}
                onChange={(e) => {
                  setName(e.target.value);
                }}
                type="text"
                placeholder={t("contactForm5")}
                required
              />
            </label>
            <label>
              <motion.input
                whileInView={{ y: [100, 1] }}
                transition={{ duration: 0.5, ease: easeOut }}
                required
                type="tel"
                placeholder={t("contactForm6")}
                value={phoneNumber}
                onFocus={handleFocus}
                onChange={handleChange}
              />
            </label>
            <h4 className={succesM ? "active-success" : ""}>
              {t("contactForm15")}
            </h4>
            {error && (
              <p
                style={{
                  color: "red",
                  fontSize: "12px",
                  position: "absolute",
                  top: "120px",
                  left: "0px",
                }}
              >
                {error}
              </p>
            )}
            <motion.p
              whileInView={{ y: [100, 1] }}
              transition={{ duration: 0.5, ease: easeOut }}
            >
              {t("contactForm7")}
            </motion.p>
            <ul>
              <motion.li
                whileInView={{ opacity: [0, 1] }}
                transition={{ duration: 0.3, delay: 0, ease: easeOut }}
                onClick={() => {
                  setActiveType("1-3");
                }}
                className={activeType == "1-3" ? "active" : ""}
              >
                {t("contactForm8")}
              </motion.li>
              <motion.li
                whileInView={{ opacity: [0, 1] }}
                transition={{ duration: 0.5, delay: 0.3, ease: easeOut }}
                onClick={() => {
                  setActiveType("4");
                }}
                className={activeType == "4" ? "active" : ""}
              >
                {t("contactForm9")}
              </motion.li>
              <motion.li
                whileInView={{ opacity: [0, 1] }}
                transition={{ duration: 0.5, delay: 0.6, ease: easeOut }}
                onClick={() => {
                  setActiveType("M");
                }}
                className={activeType == "M" ? "active" : ""}
              >
                {t("contactForm10")}
              </motion.li>
            </ul>
            <motion.button
              whileInView={{ y: [100, 1] }}
              transition={{ duration: 0.3, ease: easeOut }}
              type="submit"
            >
              {t("contactForm11")}
            </motion.button>
          </form>
        </div>
      </div>
    </section>
  );
}

export default ContactForm;
